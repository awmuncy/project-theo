// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
  externalId  String      @unique
  email       String      @unique
  name        String?
  inventory   Inventory[]
  Lot         Lot[]
  coins       Int         @default(0)
  bankedCoins Int         @default(0)
  Offer       Offer[]
  Shop        Shop[]
}

model Inventory {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now()) @updatedAt
  ownerId       Int
  owner         User           @relation(fields: [ownerId], references: [id])
  items         ItemInstance[]
  inventoryType String
}

model ItemInstance {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  item        Item      @relation(fields: [itemId], references: [id])
  itemId      Int
  inventoryId Int
  inventory   Inventory @relation(fields: [inventoryId], references: [id])
  Lot         Lot?      @relation(fields: [lotId], references: [id])
  lotId       Int?
  Offer       Offer?    @relation(fields: [offerId], references: [id])
  offerId     Int?
}

model Item {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now()) @updatedAt
  name          String
  image         String
  description   String
  standardPrice Int
  rarity        Int
  ItemInstance  ItemInstance[]
  ShopItem      ShopItem[]
}

model Lot {
  id        Int            @id @default(autoincrement())
  createdAt DateTime       @default(now())
  updatedAt DateTime       @default(now()) @updatedAt
  userId    Int
  user      User           @relation(fields: [userId], references: [id])
  items     ItemInstance[]
  Offer     Offer[]
  coins     Int
}

model Offer {
  id        Int            @id @default(autoincrement())
  createdAt DateTime       @default(now())
  updatedAt DateTime       @default(now()) @updatedAt
  userId    Int
  user      User           @relation(fields: [userId], references: [id])
  items     ItemInstance[]
  lot       Lot            @relation(fields: [lotId], references: [id])
  lotId     Int
  coins     Int
}

model Shop {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  userId    Int
  user      User       @relation(fields: [userId], references: [id])
  items     ShopItem[]
  till      Int        @default(0)
  shopSize  Int        @default(10)
}

model ShopItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  itemId    Int
  price     Int
  item      Item     @relation(fields: [itemId], references: [id])
  shopId    Int
  shop      Shop     @relation(fields: [shopId], references: [id])

  @@unique([itemId, shopId])
}
